name: "yarn-build-action"
description: "Sets up, builds, lints, and tests a node package using Yarn3 and Node 18"

inputs:
  npm-token:
    description: "npm credentials, most useful for private repositories"
    required: true

  node-version:
    description: "Node.js version to use for CI"
    required: false
    default: 18.x

  node-version-file:
    description: "specify if you want to use a .nvmrc file to determine Node.js version in setup"
    required: false
    default: ''

  skip-test:
    description: "Set to true if building for deploy and tests passed in another step"
    required: false
    default: false

  skip-lint:
    description: "Set to true if lint is not required/supported/needed"
    required: false
    default: false

  ci-setup:
    description: "Call yarn ci-setup before building and running tests (and after install)"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'
        always-auth: true
        registry-url: 'https://registry.npmjs.org'
      if: "${{ inputs.node-version-file == '' }}"

    - name: Setup Node.js using .nvmrc
      uses: actions/setup-node@v4
      with:
        node-version-file: ${{ inputs.node-version-file }}
        cache: 'yarn'
        always-auth: true
        registry-url: 'https://registry.npmjs.org'
      if: "${{ inputs.node-version-file != '' }}"

    - name: Grant access to GasBuddy packages
      shell: bash
      run: |
        yarn config set npmScopes.gasbuddy.npmRegistryServer "https://registry.npmjs.org"
        yarn config set npmScopes.gasbuddy.npmAlwaysAuth true
        yarn config set npmScopes.gasbuddy.npmAuthToken $NPM_AUTH_TOKEN
      if: "${{ inputs.npm-token != '' }}"
      env:
        NPM_AUTH_TOKEN: ${{inputs.npm-token}}

    - name: Install packages
      run: yarn install --immutable
      shell: bash

    - name: Setup CI environment
      run: yarn ci-setup
      shell: bash
      if: ${{ inputs.ci-setup == 'true' }}

    - name: Build code
      run: yarn build
      shell: bash

    - name: Verify code formatting
      run: yarn lint
      shell: bash
      if: ${{ inputs.skip-lint != 'true' }}

    - name: Run tests
      run: yarn test
      shell: bash
      if: ${{ inputs.skip-test != 'true' }}
      env:
        NODE_ENV: test
        CI: "true"
        __NEXT_TEST_MODE: jest
